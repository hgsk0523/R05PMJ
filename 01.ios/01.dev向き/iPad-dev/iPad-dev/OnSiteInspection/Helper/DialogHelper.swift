import Foundation
import UIKit

// MARK: - Property

/// エラーケース
enum ErrorCause: Error {
    /// 通常エラー
    case ApiError
    /// 通信エラー
    case ConnectionError
    /// オブジェクトが存在しない
    case noObject
    /// レスポンスが存在しない
    case noResponse
    /// その他
    case Other
}

/// エラー以外のダイアログ
enum DialogMessage: String {
    /// クラウド上に画像保存成功
    case SaveImageSuccess = "画像の保存に成功しました。"
    /// 点検項目名重複
    case DuplicateInspectionItemName = "点検項目名が重複しています。別の項目名で登録してください。"
    /// ワークシートコード重複
    case WscdDuplicate = "WSCDが重複しています。別のWSCDで登録してください。"
    /// 1件削除
    case PartiallyDelete = "本当に削除してもよろしいですか？"
    /// 検査完了
    case InspectionCompleted = "この点検を終了してよろしいですか？"
    /// 検査完了(未実施あり)
    case InspectionNotImplemented = "撮影またはAI判定未実施の項目がありますが終了してよろしいですか？"
    /// 検査完了(NGあり)
    case InspectionNg = "AI判定がNGの項目がありますが終了してよろしいですか？"
    /// 検査完了(解析失敗あり)
    case InspectionAnalysisFailed = "AI判定に失敗している項目がありますが終了してよろしいですか？"
    /// カメラ権限がない場合
    case NoCameraPermission = "カメラへのアクセス許可がないため、撮影画面に遷移できません。設定アプリよりカメラへのアクセス許可をONにしてください。"
}

enum ErrorID: String, Error {
    /// ネットワーク異常による設定情報取得失敗
    case ID0001 = "設定情報の取得に失敗しました。ネットワークに接続後、連携アプリから再起動してください。"
    /// ネットワーク異常以外による設定情報取得失敗
    case ID0002 = "設定情報の取得に失敗しました。連携アプリから再起動してください。"
    /// ログイン失敗（パラメータ異常）
    case ID0003 = "ログインに失敗しました。連携アプリから再起動してください。"
    /// ネットワーク異常による点検情報取得失敗
    case ID0004 = "点検情報の取得に失敗しました。ネットワークに接続後、連携アプリから再起動してください。"
    /// ネットワーク異常以外による点検情報取得失敗
    case ID0005 = "点検情報の取得に失敗しました。連携アプリから再起動してください。"
    /// ネットワーク異常による画像解析指示失敗
    case ID0006 = "画像解析指示に失敗しました。ネットワークに接続後、再度同じ操作を実施してください。"
    /// ネットワーク異常以外による画像解析指示失敗
    case ID0007 = "画像解析指示に失敗しました。再度同じ操作を実施してください。"
    /// 点検項目削除失敗
    case ID0008 = "点検項目の削除に失敗しました。再度同じ操作を実施してください。"
    /// ネットワーク異常によるAI判定結果取得失敗
    case ID0009 = "AI判定結果取得に失敗しました。ネットワークに接続してください。"
    /// ネットワーク異常以外によるAI判定結果取得失敗
    case ID0010 = "AI判定結果取得に失敗しました。"
    /// 項目名に禁則文字が使用されている
    case ID0011 = "禁則文字が使用されています。"
    /// 登録上限
    case ID0012 = "点検項目登録上限です。点検項目を削除してから再度同じ操作を実施してください"
    /// 上記以外の理由で点検項目登録失敗
    case ID0013 = "点検項目の新規追加に失敗しました。再度同じ操作を実施してください。"
    /// 点検結果編集画面表示失敗
    case ID0014 = "点検結果編集画面の表示に失敗しました。"
    /// 更新失敗
    case ID0015 = "点検項目の更新に失敗しました。再度同じ操作を実施してください。"
    /// コメント表示画面表示失敗
    case ID0016 = "コメント表示画面の表示に失敗しました。"
    /// NGコメント登録画面の表示失敗
    case ID0017 = "NGコメント登録画面の表示に失敗しました。"
    /// NGコメント登録失敗
    case ID0018 = "NGコメントの登録に失敗しました。再度同じ操作を実施してください。"
    /// カメラ起動失敗
    case ID0019 = "カメラの起動に失敗しました。再度同じ操作を実施してください。"
    /// 撮影失敗
    case ID0020 = "撮影に失敗しました。再撮影してください。"
    /// カメラ切り替え失敗
    case ID0021 = "カメラの切り替えに失敗しました。再度同じ操作を実施してください。"
    /// 撮影例の表示失敗
    case ID0022 = "撮影例の表示に失敗しました。再度同じ操作を実施してください。"
    /// 初期設定項目かつ撮影例が登録されていない
    case ID0023 = "撮影例が登録されていません。"
    /// プレビュー画面表示
    case ID0024 = "プレビュー画面の表示に失敗しました。再撮影してください。"
    /// トリミング失敗
    case ID0025 = "画像のトリミングに失敗しました。再度同じ操作を実施してください。"
    /// 操作端末への画像保存失敗
    case ID0026 = "操作端末への画像の保存が失敗しました。再度同じ操作を実施してください。"
    /// サーバーへの画像保存失敗
    case ID0027 = "サーバーへの画像の保存が失敗しました。再送ボタンを押して再度画像を登録してください。"
    /// WSエビデンス画面表示失敗
    case ID0028 = "WSエビデンス画面の表示に失敗しました。"
    /// サーバーへの画像保存失敗
    case ID0029 = "検査完了処理に失敗しました。ネットワークに接続後、再度同じ操作を実施してください。"
    /// ネットワーク異常以外による検査完了失敗
    case ID0030 = "検査完了処理に失敗しました。再度同じ操作を実施してください。"
    /// ネットワーク異常による画像拡大画面の表示失敗
    case ID0031 = "画像拡大画面の表示に失敗しました。ネットワークに接続後、再度同じ操作を実施してください。"
    /// ネットワーク異常以外による画像拡大画面の表示失敗
    case ID0032 = "画像拡大画面の表示に失敗しました。再度同じ操作を実施してください。"
    /// 端末容量不足
    case ID0033 = "端末の容量が不足しているため、操作端末への画像の保存が失敗しました。不要な画像を削除してください。"
    /// ローカルに撮影画像がない
    case ID0034 = "端末に画像が存在しないため、サーバーへの画像送信に失敗しました。再度撮影を実施してください。"
    /// カスタムURLスキーマの値が不正
    case ID0035 = "CustomURLSchemeの値が不正です。連携アプリから再起動してください。"
    /// その他のエラー
    case ID9999 = "想定外のエラーが発生しました。アプリケーションを再起動しても解決しない場合はシステム管理者に連絡してください。"
}


// MARK: - Method
/// エラー時の処理
func errorDialog(error: Error, vc: UIViewController, handler: ((UIAlertAction) -> Void)? = nil) {
    if let errorID = error as? ErrorID {
        // エラーダイアログ表示
        Alert.okAlert(vc: vc, message: errorID.rawValue, handler: handler)
    } else {
        // 想定外エラー
        Alert.okAlert(vc: vc, message: ErrorID.ID9999.rawValue, handler: handler)
    }
}
